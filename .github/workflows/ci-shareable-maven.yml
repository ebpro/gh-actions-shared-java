name: Java CI (shareable)

# Thanks to https://github.com/apache/maven-gh-actions-shared/
on:
    workflow_call:
      inputs:
        maven-args:
          description: The arguments to pass to all Maven commands when building the code
          required: false
          default: '-D"invoker.streamLogsOnFailures"'
          type: string
  
        jdk-matrix:
          description: jdk matrix as json array
          required: false
          default: '[ "17" ]'
          type: string
  
        jdk-distribution-matrix:
          description: jdk distribution matrix
          required: false
          default: '[ "temurin" ]'
          type: string
  
        maven-matrix:
          description: The Maven version matrix as json array
          required: false
          default: '[ "3.8.8" ]'
          type: string
  
        matrix-exclude:
          description: exclude for matrix as json
          required: false
          default: '[]'
          type: string
    
        verify-goal:
          description: The Maven goal used by verify jobs
          required: false
          default: 'verify'
          type: string

env:
  GITHUB_ACTOR: ${{secrets.GITHUB_ACTOR}}
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  SONAR_URL: ${{secrets.SONAR_URL}}
  SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
  DOCKERHUB_TOKEN: ${{secrets.DOCKERHUB_TOKEN}}

# allow single build per branch or PR
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true
  
jobs:
  # This job build, test and stage the artefact and the website for the develop branch
  maven-build-test-site:
    name: jdk-${{ matrix.jdk }}-${{ matrix.distribution }} ${{ matrix.maven }}
    # The tags to select the runner
    runs-on: [ self-hosted, Linux ]

    strategy:
        matrix:
          jdk: ${{ fromJSON( inputs.jdk-matrix ) }}
          distribution: ${{ fromJSON( inputs.jdk-distribution-matrix ) }}
          maven: ${{ fromJSON( inputs.maven-matrix ) }}
          exclude: ${{ fromJSON( inputs.matrix-exclude ) }}
  
    steps:
      ## Environment setup
      # checkout the repository
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Setups git user name and email
      - run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com        
      # Maven is not installed in self hosted
      # so we install one (see wrapper below for the right version)
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
            maven-version: ${{ matrix.maven }}  
     # Installs the JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.jdk }}
          check-latest: true
          cache: 'maven'
      # Setup maven version as a wrapper
      - name: Set up Maven
        run: >
          mvn --errors \
              --batch-mode \
              --show-version \
              --update-snapshots \
              org.apache.maven.plugins:maven-wrapper-plugin:3.2.0:wrapper \
              -Dmaven="${{ matrix.maven }}"

      - name: Extract branch name
        shell: bash
        run: echo "MY_BRANCH=$(git rev-parse --abbrev-ref HEAD | tr / _)" >> $GITHUB_ENV

      # Build and test
      - name: Build and Test with Maven
        run: >
          ./mvnw --errors \
              --show-version \
              --batch-mode \
              --update-snapshots \
              --color always \
              --settings ci-settings.xml \
              --activate-profiles jacoco \
              ${{ inputs.maven-args }} \
              ${{ inputs.verify-goal }}

      # Check quality with SonarQube
        ### THIS STEP MUST BE ENABLED BY CONFIGURING : SONAR_URL and SONAR_TOKEN secrets.
      - name: Quality check with Sonarqube
        shell: bash
        if: env.SONAR_URL != null && env.SONAR_TOKEN != null
        run: >
          ./mvnw --errors \
            --show-version \
            --batch-mode \
            -DskipTests=true \
            --color always \
            --settings ci-settings.xml \
            -Dsonar.branch.name=$MY_BRANCH \
            -activate-profiles jacoco,sonar \
            sonar:sonar

      # Stage artifact
      - name: Stage artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: target/*.jar

      ## Build and deploy project site      
      - name: Install SSH Key
        if: ${{github.ref == 'refs/heads/develop'}}
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Build and deploy site with Maven
        if: ${{github.ref == 'refs/heads/develop'}}
        run: >
          ./mvnw --errors \
              --show-version \
              --batch-mode \
              --color always \
              --settings ci-settings.xml \
              site:site site-deploy